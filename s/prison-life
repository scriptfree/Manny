local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "BBL Drizzy", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://18777407436",
	PremiumOnly = false
})

local playersService = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- Services
local playersService = game:GetService("Players")
local teamsService = game:GetService("Teams")

-- Global variable to control the loop
getgenv().LoopTeleport = false

-- Function to teleport all players on the "Criminals" team to the local player
local function teleportCriminalsToMe()
    local currentPlayer = playersService.LocalPlayer
    local yourCharacter = currentPlayer.Character

    if yourCharacter and yourCharacter:FindFirstChild("HumanoidRootPart") then
        local yourPosition = yourCharacter.HumanoidRootPart.Position
        local teamCriminals = teamsService:FindFirstChild("Criminals")

        if teamCriminals then
            while getgenv().LoopTeleport do
                -- Get a list of all players on the "Criminals" team
                for _, player in pairs(playersService:GetPlayers()) do
                    if player.Team == teamCriminals and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        -- Teleport the criminal player to your position
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(yourPosition)
                    end
                end
                wait(2) -- Delay between each teleport (adjust as necessary)
            end
        else
            warn("'Criminals' team not found.")
        end
    else
        warn("Your character or HumanoidRootPart not found.")
    end
end

-- Toggle button for the loop teleport function
Tab:AddToggle({
    Name = "Loop Teleport Criminals to Me",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Enable the loop when toggled on
            getgenv().LoopTeleport = true

            -- Start looping in a separate thread
            spawn(function()
                teleportCriminalsToMe()
            end)
        else
            -- Disable the loop when toggled off
            getgenv().LoopTeleport = false
        end
    end
})


-- Function to find the nearest player
local function getNearestPlayer()
    local currentPlayer = playersService.LocalPlayer
    local nearestPlayer = nil
    local shortestDistance = math.huge -- Start with an infinitely large distance

    for _, player in pairs(playersService:GetPlayers()) do
        if player ~= currentPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (currentPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end

    return nearestPlayer
end

-- Function to attack the target player until they are dead
local function attackUntilDead(targetPlayer)
    local currentPlayer = playersService.LocalPlayer
    while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.Health > 0 and getgenv().AttackEnabled do
        -- Teleport to the target player
        if currentPlayer and currentPlayer.Character and currentPlayer.Character:FindFirstChild("HumanoidRootPart") then
            currentPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
        end
        
        -- Punch the target player
        local args = {
            [1] = targetPlayer
        }
        replicatedStorage:WaitForChild("meleeEvent"):FireServer(unpack(args))
        wait(0.01) -- Small delay to avoid flooding the server
    end
end

-- Toggle button for the attack function
Tab:AddToggle({
	Name = "Attack Nearest Player",
	Default = false,
	Callback = function(Value)
		if Value then
			-- Enable the attack when toggled on
			getgenv().AttackEnabled = true

			-- Start attacking in a separate thread
			spawn(function()
				while getgenv().AttackEnabled do
					local targetPlayer = getNearestPlayer()
					if targetPlayer then
						attackUntilDead(targetPlayer)
					else
						warn("No valid target player found.")
					end
					wait(1) -- Delay before recalculating the nearest player (adjust as necessary)
				end
			end)
		else
			-- Disable the attack when toggled off
			getgenv().AttackEnabled = false
		end
	end
})


Tab:AddButton({
	Name = "Teleport to random criminal",
	Callback = function()
		
		-- Get the "Criminals" team
		local teamCriminals = game:GetService("Teams"):FindFirstChild("Criminals")

		-- Check if the team exists
		if teamCriminals then
			-- Get a list of all players on the "Criminals" team
			local criminals = {}
			for _, player in pairs(game:GetService("Players"):GetPlayers()) do
				if player.Team == teamCriminals then
					table.insert(criminals, player)
				end
			end

			-- If there are any players on the "Criminals" team
			if #criminals > 0 then
				-- Pick a random player from the team
				local randomCriminal = criminals[math.random(1, #criminals)]

				-- Get the character of the random player
				local criminalCharacter = randomCriminal.Character
				local yourCharacter = game.Players.LocalPlayer.Character

				-- Ensure the criminal's character and your character exist
				if criminalCharacter and yourCharacter then
					-- Teleport your character to the criminal
					yourCharacter:MoveTo(criminalCharacter:GetPrimaryPartCFrame().p)
				else
					warn("Character not found.")
				end
			else
				warn("No players found on the 'Criminals' team.")
			end
		else
			warn("'Criminals' team not found.")
		end
	end
})


OrionLib:Init()
